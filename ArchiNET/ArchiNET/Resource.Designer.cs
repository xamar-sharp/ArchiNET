//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArchiNET {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ArchiNET.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на агрегация.
        /// </summary>
        internal static string Aggregation {
            get {
                return ResourceManager.GetString("Aggregation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ассоциация.
        /// </summary>
        internal static string Association {
            get {
                return ResourceManager.GetString("Association", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Произошла ошибка авторизации!.
        /// </summary>
        internal static string AuthorizationError {
            get {
                return ResourceManager.GetString("AuthorizationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Черный.
        /// </summary>
        internal static string Black {
            get {
                return ResourceManager.GetString("Black", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Отмена.
        /// </summary>
        internal static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Фон чата.
        /// </summary>
        internal static string ChatImage {
            get {
                return ResourceManager.GetString("ChatImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Чат.
        /// </summary>
        internal static string ChatPageTitle {
            get {
                return ResourceManager.GetString("ChatPageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на класс.
        /// </summary>
        internal static string Class {
            get {
                return ResourceManager.GetString("Class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Код.
        /// </summary>
        internal static string CodeTitle {
            get {
                return ResourceManager.GetString("CodeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на композиция.
        /// </summary>
        internal static string Composition {
            get {
                return ResourceManager.GetString("Composition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Компоновщик - структурный паттерн проектирования при котором сущность определяет возможности древовидной структуры,то есть инкапсуляция в себе потомков своего же типа сущности с рекурсивной итерацией,примером в C# могут служить такие классы как JToken,JObject,XmlNode,XElement и подобные..
        /// </summary>
        internal static string CompositorDescription {
            get {
                return ResourceManager.GetString("CompositorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Компоновщик.
        /// </summary>
        internal static string CompositorTitle {
            get {
                return ResourceManager.GetString("CompositorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ограничение передачи данных.
        /// </summary>
        internal static string ConnectionConstraint {
            get {
                return ResourceManager.GetString("ConnectionConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Лимит соединений.
        /// </summary>
        internal static string ConnectionLimit {
            get {
                return ResourceManager.GetString("ConnectionLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Лимит....
        /// </summary>
        internal static string ConnectionLimitPlaceholder {
            get {
                return ResourceManager.GetString("ConnectionLimitPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Голубой.
        /// </summary>
        internal static string CornflowerBlue {
            get {
                return ResourceManager.GetString("CornflowerBlue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на C#.
        /// </summary>
        internal static string CSharp {
            get {
                return ResourceManager.GetString("CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Локализация.
        /// </summary>
        internal static string CultureData {
            get {
                return ResourceManager.GetString("CultureData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Цвет текста кода.
        /// </summary>
        internal static string DefaultColor {
            get {
                return ResourceManager.GetString("DefaultColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Цвет текста без пресета.
        /// </summary>
        internal static string DefaultTextColor {
            get {
                return ResourceManager.GetString("DefaultTextColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Таймаут DNS-cache.
        /// </summary>
        internal static string DnsTimeout {
            get {
                return ResourceManager.GetString("DnsTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Укажите таймаут в мс.
        /// </summary>
        internal static string DnsTimeoutPlaceholder {
            get {
                return ResourceManager.GetString("DnsTimeoutPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Английский.
        /// </summary>
        internal static string English {
            get {
                return ResourceManager.GetString("English", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Введите мап(через =).
        /// </summary>
        internal static string EnterPresetFormat {
            get {
                return ResourceManager.GetString("EnterPresetFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на перечисление.
        /// </summary>
        internal static string Enum {
            get {
                return ResourceManager.GetString("Enum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на наслед.
        /// </summary>
        internal static string Generalization {
            get {
                return ResourceManager.GetString("Generalization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Серый.
        /// </summary>
        internal static string Gray {
            get {
                return ResourceManager.GetString("Gray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Зеленый.
        /// </summary>
        internal static string Green {
            get {
                return ResourceManager.GetString("Green", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на имплемент.
        /// </summary>
        internal static string Implementation {
            get {
                return ResourceManager.GetString("Implementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на интерфейс.
        /// </summary>
        internal static string Interface {
            get {
                return ResourceManager.GetString("Interface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Невалидный формат!.
        /// </summary>
        internal static string InvalidPresetFormat {
            get {
                return ResourceManager.GetString("InvalidPresetFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Темная тема.
        /// </summary>
        internal static string IsDarkTheme {
            get {
                return ResourceManager.GetString("IsDarkTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Последние сообщения в чате.
        /// </summary>
        internal static string LastMessagesCount {
            get {
                return ResourceManager.GetString("LastMessagesCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Посредник - поведенческий паттерн проектирования при котором запрос от вызывающего объекта делегируется промежуточной сущности для реализации целей запроса.Пример в C# - класс DependencyService через который мы можем получить реализацию кроссплатформенного интерфейса именно на данной платформе..
        /// </summary>
        internal static string MediatorDescription {
            get {
                return ResourceManager.GetString("MediatorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Посредник.
        /// </summary>
        internal static string MediatorTitle {
            get {
                return ResourceManager.GetString("MediatorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Фиолетовый.
        /// </summary>
        internal static string MediumOrchid {
            get {
                return ResourceManager.GetString("MediumOrchid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Уведомление.
        /// </summary>
        internal static string Message {
            get {
                return ResourceManager.GetString("Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Мои записи.
        /// </summary>
        internal static string MyStoresTitle {
            get {
                return ResourceManager.GetString("MyStoresTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Орхидейный.
        /// </summary>
        internal static string Orchid {
            get {
                return ResourceManager.GetString("Orchid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на паттерн.
        /// </summary>
        internal static string Pattern {
            get {
                return ResourceManager.GetString("Pattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Пресеты.
        /// </summary>
        internal static string Presets {
            get {
                return ResourceManager.GetString("Presets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на принцип.
        /// </summary>
        internal static string Principle {
            get {
                return ResourceManager.GetString("Principle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Профиль.
        /// </summary>
        internal static string ProfileTitle {
            get {
                return ResourceManager.GetString("ProfileTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Прототип - порождающий паттерн проектирования при котором сущность должна проводить прототипирование себя, в стандартной реализации С# примером может служить интерфейс ICloneable.
        /// </summary>
        internal static string PrototypeDescription {
            get {
                return ResourceManager.GetString("PrototypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Прототип.
        /// </summary>
        internal static string PrototypeTitle {
            get {
                return ResourceManager.GetString("PrototypeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Красный.
        /// </summary>
        internal static string Red {
            get {
                return ResourceManager.GetString("Red", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Регистрация.
        /// </summary>
        internal static string RegistrationTitle {
            get {
                return ResourceManager.GetString("RegistrationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на REST (representation state transfer) является принципом сетевой передачи данных от запроса к ответу по протоколу HTTP через такие форматы как XML,JSON и поставка ответа непременно от API контроллера.Примером класса клиента в C# является HttpClient. .
        /// </summary>
        internal static string RestDescription {
            get {
                return ResourceManager.GetString("RestDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на REST.
        /// </summary>
        internal static string RestTitle {
            get {
                return ResourceManager.GetString("RestTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Русский.
        /// </summary>
        internal static string Russian {
            get {
                return ResourceManager.GetString("Russian", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Применить.
        /// </summary>
        internal static string SaveLocal {
            get {
                return ResourceManager.GetString("SaveLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Поиск.
        /// </summary>
        internal static string SearchTitle {
            get {
                return ResourceManager.GetString("SearchTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Настройки.
        /// </summary>
        internal static string SettingsTitle {
            get {
                return ResourceManager.GetString("SettingsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Обзор.
        /// </summary>
        internal static string StoreTitle {
            get {
                return ResourceManager.GetString("StoreTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Загружать записей.
        /// </summary>
        internal static string TopRemote {
            get {
                return ResourceManager.GetString("TopRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Загрузка.
        /// </summary>
        internal static string UploadTitle {
            get {
                return ResourceManager.GetString("UploadTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Использовать анимации.
        /// </summary>
        internal static string UseAnimations {
            get {
                return ResourceManager.GetString("UseAnimations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ассоциация.
        /// </summary>
        internal static string WebViewTitle {
            get {
                return ResourceManager.GetString("WebViewTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Белый.
        /// </summary>
        internal static string White {
            get {
                return ResourceManager.GetString("White", resourceCulture);
            }
        }
    }
}
